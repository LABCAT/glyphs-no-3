{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/AnimatedGlyph.js","js/functions/ShuffleArray.js","js/classes/CircleGlyph.js","js/classes/LABCATGlyph.js","js/classes/HexagonGlyph.js","js/classes/TriangleGlyph.js","audio/glyphs-no-3.ogg","audio/glyphs-no-3.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","_jsxs","id","className","xmlns","height","viewBox","width","children","_jsx","d","fill","AnimatedGlyph","constructor","x","y","startWidth","arguments","length","undefined","lifetime","direction","this","p","hue","random","origin","createVector","maxWidth","rotation","lifeTime","startTime","millis","endTime","randY","randX","destination","clockwiseRotation","Math","update","draw","x1","y1","y2","x3","y3","currentTime","scale","min","dist","Vector","sub","mult","pos","add","translate","rotate","strokeWeight","stroke","triangle","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","floor","CircleGlyph","darkMode","super","hueSet","hue1","hue2","hue3","hue4","color","ellipse","LABCATGlyph","shapeType","center","hsbColour","hueDegree","brightnessTrans","map","hueTrans","circleSize","satCircles","horiVertMin","horiVertMax","diagonalMin","diagonalMax","positions","push","i","noStroke","angleMode","DEGREES","hsba","Array","star","pop","octagon","radius","RADIANS","angle","TWO_PI","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","pentagon","sizeReducer","HexagonGlyph","drawHexagon","TriangleGlyph","brightness","alpha","size","x4","y4","y5","x6","y6","oppositeHue","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","bpm","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","scheduleCueSet","noteSet2","noteSet3","noteSet4","Object","assign","controlChanges","keys","noteSet5","document","getElementById","classList","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","time","addCue","setup","createCanvas","background","colorMode","HSB","rectMode","CENTER","bgHue","animatedGlyphs","animatedGlyphs2","bgOpacity","isPlaying","glyph","circleGlyphScale","circleGlyphDarkMode","executeCueSet1","variation","maxSize","index","setTimeout","executeCueSet2","executeCueSet3","durationTicks","numberOfNotes","intervalPerNote","starGlyphOpacity","executeCueSet4","value","executeCueSet5","delay","hasStarted","mousePressed","pause","parseInt","buffer","duration","reset","dataLayer","title","location","href","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.8bf95791.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default class AnimatedGlyph {\r\n    constructor(p5, x, y, width, startWidth = 0, lifetime = 0, direction = '') {\r\n        this.p = p5;\r\n        this.hue = this.p.random(0, 360);\r\n        this.origin = this.p.createVector(x, y);\r\n        this.width = startWidth;\r\n        this.maxWidth = width;\r\n        this.rotation = 0;\r\n        this.lifeTime = lifetime ? lifetime : this.p.random(5000, 15000);\r\n        this.startTime = this.p.millis();\r\n        this.endTime = this.startTime + this.lifeTime;\r\n        \r\n        const randY =  this.p.random(0, this.p.height);\r\n        const randX =  this.p.random(0, this.p.width);\r\n        this.direction = direction ? direction : this.p.random(['left', 'right', 'up', 'down']);\r\n        switch (this.direction) {\r\n            case 'left':\r\n                this.destination = this.p.createVector(0, randY);\r\n                break;\r\n            case 'right':\r\n                this.destination = this.p.createVector(this.p.width, randY);\r\n                break;\r\n            case 'up':\r\n                this.destination = this.p.createVector(randX, 0);\r\n                break;\r\n            case 'down':\r\n                this.destination = this.p.createVector(randX, this.p.height);\r\n                break;\r\n        }\r\n\r\n        this.clockwiseRotation = Math.random() < 0.5;\r\n    }\r\n\r\n    update() {\r\n        if(this.width < this.maxWidth) {\r\n            this.width = this.width + (Math.random() / 4);\r\n        }\r\n        if(this.clockwiseRotation){\r\n            this.rotation++;\r\n        }\r\n        else {\r\n            this.rotation--;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const x1 = 0 - (this.width/2),   \r\n            y1 = 0 + (this.width/2), \r\n            x2 = 0,\r\n            y2 = 0 - (this.width/2),\r\n            x3 = 0 + (this.width/2), \r\n            y3 = 0 + (this.width/2),\r\n            currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            this.p.strokeWeight(4);\r\n            this.p.stroke(this.hue, 100, 100);\r\n            this.p.fill(this.hue, 100, 100, 0.25);\r\n            this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n        }\r\n    }\r\n}","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","import AnimatedGlyph from './AnimatedGlyph.js';\r\nimport ShuffleArray from '../functions/ShuffleArray.js';\r\n\r\nexport default class CircleGlyph extends AnimatedGlyph {\r\n\r\n    constructor(p5, x, y, width, startWidth, darkMode) {\r\n        super(p5, x, y, width, startWidth);\r\n        this.hueSet = ShuffleArray([30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360]);\r\n        this.hue1 = this.hueSet[0];\r\n        this.hue2 = this.hueSet[1];\r\n        this.hue3 = this.hueSet[2];\r\n        this.hue4 = this.hueSet[3];\r\n        this.stroke = darkMode ? p5.color(0, 0, 0) : p5.color(0, 0, 100);\r\n        this.endTime = this.startTime + this.lifeTime + 1000;\r\n    }\r\n\r\n    draw() {\r\n        const currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            this.p.strokeWeight(1);\r\n            this.p.stroke(this.stroke);\r\n            this.p.fill(this.hue1, 100, 100, 0.5);\r\n            this.p.ellipse(0, 0, this.width, this.width);\r\n            this.p.fill(this.hue2, 100, 100, 0.5);\r\n            this.p.ellipse(0, 0, this.width / 2, this.width / 2);\r\n            this.p.fill(this.hue1, 100, 100, 0.5);\r\n            this.p.ellipse(0, 0, this.width / 4, this.width / 4);\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n        }\r\n    }\r\n}","import AnimatedGlyph from './AnimatedGlyph.js';\r\n\r\nexport default class LABCATGlyph extends AnimatedGlyph {\r\n\r\n    constructor(p5, x, y, width, shapeType, direction) {\r\n        super(p5, x, y, width, width / 2, p5.random(3000, 6000));\r\n\r\n        this.width = this.maxWidth / 4;\r\n        this.shapeType = shapeType;\r\n\r\n        this.center = this.width / 2;\r\n        \r\n        // the HSB colour that this Glyph represents\r\n        this.hsbColour = [\r\n            Math.floor(this.p.random(0, 360)),\r\n            this.p.random(0, 100),\r\n            this.p.random(0, 100)\r\n        ];\r\n        \r\n        // value of the hue dimension\r\n        this.hueDegree = this.hsbColour[0];\r\n        this.brightnessTrans = this.p.map(this.hsbColour[2], 0, 100, 0.8, 0);\r\n        this.hueTrans = this.p.map(this.hsbColour[2], 100, 0, 0.9, 0.1);\r\n    }\r\n\r\n    update() {\r\n        if(this.width < this.maxWidth) {\r\n            this.width = this.width + (Math.random() / 4);\r\n        }\r\n        this.rotation++;\r\n\r\n        this.center = this.width / 2;\r\n\r\n        // variables created by the saturation dimension\r\n        this.circleSize = this.p.map(this.hsbColour[1], 100, 0, this.width, 0 + this.width/16);\r\n\r\n        // JSON object containing the different values for the three circles drawn to represent the saturation dimension\r\n        this.satCircles = {\r\n            'brightness' : [\r\n                100,\r\n                0,\r\n                100\r\n            ],\r\n            'alpha' : [\r\n                0.1875,\r\n                0.625,\r\n                0.375\r\n            ],\r\n            'size' : [\r\n                this.circleSize,\r\n                this.circleSize/2,\r\n                this.circleSize/4,\r\n            ]\r\n        }\r\n\r\n        // horiVertMin and horiVertMax are values that determine the positions for the alternating points (between the center of a circle and its edge)\r\n        // of the vertical and horizontal triangles used to represent the hue dimension\r\n        this.horiVertMin = this.p.map(this.hueDegree, 0, 179, this.center, 0);\r\n        this.horiVertMax = this.p.map(this.hueDegree, 0, 179, this.center, this.width);\r\n        if(this.hueDegree > 179) {\r\n            this.horiVertMin = 0;\r\n            this.horiVertMax = this.width;\r\n        }\r\n\r\n        // diagonalMin and diagonalMax are values that determine the position for the alternating points (between the center of a circle and its edge)\r\n        // of the diagonal triangles representing the hue dimension\r\n        this.diagonalMin = this.p.map(this.hueDegree, 359, 180, (0 + this.width/8 + this.width/32), this.center);\r\n        this.diagonalMax = this.p.map(this.hueDegree, 359, 180, (this.width - this.width/8 - this.width/32), this.center);\r\n\r\n        // set up the JSON objects used to store all the x and y positions of the triangles that will be drawn when this is passed to the drawStar function\r\n        this.positions = {\r\n            'x1': [\r\n                this.center - this.width/32,\r\n                this.center - this.width/32,\r\n                this.center,\r\n                this.center + this.width/32,\r\n                this.center - this.width/32,\r\n                this.center - this.width/32,\r\n                this.center,\r\n                this.center + this.width/32,\r\n            ],\r\n            'y1': [\r\n                this.center,\r\n                this.center - this.width/32,\r\n                this.center - this.width/32,\r\n                this.center - this.width/32,\r\n                this.center,\r\n                this.center - this.width/32,\r\n                this.center - this.width/32,\r\n                this.center - this.width/32\r\n            ],\r\n            'x2': [\r\n                this.center,\r\n                this.diagonalMax,\r\n                this.horiVertMax,\r\n                this.diagonalMax,\r\n                this.center,\r\n                this.diagonalMin,\r\n                this.horiVertMin,\r\n                this.diagonalMin\r\n            ],\r\n            'y2': [\r\n                this.horiVertMin,\r\n                this.diagonalMin,\r\n                this.center,\r\n                this.diagonalMax,\r\n                this.horiVertMax,\r\n                this.diagonalMax,\r\n                this.center,\r\n                this.diagonalMin\r\n            ],\r\n            'x3': [\r\n                this.center + this.width/32,\r\n                this.center + this.width/32,\r\n                this.center,\r\n                this.center - this.width/32,\r\n                this.center + this.width/32,\r\n                this.center + this.width/32,\r\n                this.center,\r\n                this.center - this.width/32\r\n            ],\r\n            'y3': [\r\n                this.center,\r\n                this.center + this.width/32,\r\n                this.center + this.width/32,\r\n                this.center + this.width/32,\r\n                this.center,\r\n                this.center + this.width/32,\r\n                this.center + this.width/32,\r\n                this.center + this.width/32\r\n            ]\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n\r\n            this.p.push();\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            \r\n            // draw the circles that represent the saturation dimension\r\n            this.p.stroke(0);\r\n            for(var i = 0; i < 3; i++){\r\n                this.p.fill(0, 0, this.satCircles['brightness'][i], this.satCircles['alpha'][i]);\r\n                this.p.ellipse(this.center, this.center, this.satCircles['size'][i]);\r\n            }\r\n\r\n            // draw the octagon/pentagon that represents the brightness dimension\r\n            this.p.fill(this.hue, 100, 100, this.brightnessTrans);\r\n            this[this.shapeType](this.center, this.center, this.width / 3);\r\n\r\n            //draw the stars that represent the hue dimension\r\n            this.p.noStroke();\r\n            this.p.angleMode(this.p.DEGREES);\r\n            this.p.translate(this.center, this.center);\r\n            this.p.rotate(this.hueDegree);\r\n\r\n            const hsba = Array(this.hue, 100, 100, this.hueTrans);\r\n            this.star(hsba, this.positions, 3);\r\n            this.p.rotate(-this.hueDegree);\r\n            this.p.translate(-this.center, -this.center);\r\n            this.star(Array(0, 0, 100, 0.8), this.positions);\r\n\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n            this.p.pop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * function to draw a hexagon shape\r\n     * adapted from: https://p5js.org/examples/form-regular-polygon.html\r\n     * @param {Number} x  - x-coordinate of the hexagon\r\n     * @param {Number} y  - y-coordinate of the hexagon\r\n     * @param {Number} radius - radius of the hexagon\r\n     */\r\n    octagon(x, y, radius) {\r\n        this.p.angleMode(this.p.RADIANS);\r\n        const angle = this.p.TWO_PI / 8;\r\n        this.p.beginShape();\r\n        for (let a = this.p.TWO_PI/16; a < this.p.TWO_PI + this.p.TWO_PI/16; a += angle) {\r\n            const sx = x + this.p.cos(a) * radius;\r\n            const sy = y + this.p.sin(a) * radius;\r\n            this.p.vertex(sx, sy);\r\n        }\r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.angleMode(this.p.DEGREES);\r\n    }\r\n\r\n    /**\r\n     * function to draw a pentagon shape\r\n     * adapted from: https://p5js.org/examples/form-regular-polygon.html\r\n     * @param {Number} x  - x-coordinate of the hexagon\r\n     * @param {Number} y  - y-coordinate of the hexagon\r\n     * @param {Number} radius - radius of the hexagon\r\n     */\r\n    pentagon(x, y, radius) {\r\n        this.p.angleMode(this.p.RADIANS);\r\n        const angle = this.p.TWO_PI / 5;\r\n        this.p.beginShape();\r\n        for (let a = this.p.TWO_PI/10; a < this.p.TWO_PI + this.p.TWO_PI/10; a += angle) {\r\n            const sx = x + this.p.cos(a) * radius;\r\n            const sy = y + this.p.sin(a) * radius;\r\n            this.p.vertex(sx, sy);\r\n        }\r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.angleMode(this.p.DEGREES);\r\n    }\r\n\r\n    /**\r\n     * function to draw the 8 triangles that repressnt the hue dimension \r\n     * the colour and transparency level of the triangles is also affected by the brightness dimension\r\n     * @param {Array}  hsba       \t\t- Array of values used to set the values for the fill function\r\n     * @param {Object} positions    \t- Object containing all the x and y positions of the 8 triangles that make up the star\r\n     * @param {Number} sizeReducer   \t- Variable that allows the star to drawn at smaller size, should be greater than 1  \r\n     */\r\n    star(hsba, positions, sizeReducer = 1) {\r\n        this.p.fill(hsba[0], hsba[1], hsba[2], hsba[3]);\r\n        for(let i = 0; i < 8; i++){\r\n            this.p.triangle(\r\n                positions['x1'][i]/sizeReducer, \r\n                positions['y1'][i]/sizeReducer, \r\n                positions['x2'][i]/sizeReducer, \r\n                positions['y2'][i]/sizeReducer, \r\n                positions['x3'][i]/sizeReducer, \r\n                positions['y3'][i]/sizeReducer\r\n            );\r\n        }\r\n    }\r\n}","import AnimatedGlyph from './AnimatedGlyph.js';\r\nimport ShuffleArray from '../functions/ShuffleArray.js';\r\n\r\nexport default class HexagonGlyph extends AnimatedGlyph {\r\n\r\n    constructor(p5, x, y, width, startWidth, darkMode) {\r\n        super(p5, x, y, width, startWidth);\r\n        this.hueSet = ShuffleArray([30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360]);\r\n        this.hue1 = this.hueSet[0];\r\n        this.hue2 = this.hueSet[1];\r\n        this.hue3 = this.hueSet[2];\r\n        this.hue4 = this.hueSet[3];\r\n        this.stroke = darkMode ? p5.color(0, 0, 0) : p5.color(0, 0, 100);\r\n        this.endTime = this.startTime + this.lifeTime + 1000;\r\n    }\r\n    drawHexagon(x, y, radius, hue) {\r\n        this.p.angleMode(this.p.RADIANS);\r\n        const angle = this.p.TWO_PI / 6;\r\n        this.p.beginShape();\r\n        this.p.stroke(this.stroke);\r\n        this.p.fill(hue, 100, 100, 0.5);\r\n\r\n        for (let a = this.p.TWO_PI / 12; a < this.p.TWO_PI + this.p.TWO_PI / 12; a += angle) {\r\n            const sx = x + this.p.cos(a) * radius;\r\n            const sy = y + this.p.sin(a) * radius;\r\n            this.p.vertex(sx, sy);\r\n        }\r\n        \r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.angleMode(this.p.DEGREES);\r\n    }\r\n\r\n    draw() {\r\n        const currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n            this.p.strokeWeight(1);\r\n            \r\n            this.drawHexagon(0, 0, this.width, this.hue1);\r\n            this.drawHexagon(0, 0, this.width / 2, this.hue2);\r\n            this.drawHexagon(0, 0, this.width / 4, this.hue1);\r\n            \r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n        }\r\n    }\r\n}","import AnimatedGlyph from './AnimatedGlyph.js';\r\nimport ShuffleArray from '../functions/ShuffleArray.js';\r\n\r\nexport default class TriangleGlyph extends AnimatedGlyph {\r\n\r\n    constructor(p5, x, y, width) {\r\n        super(p5, x, y, width, width / 4, p5.random(3000, 5000));\r\n        this.hue = ShuffleArray([30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360])[0];\r\n\r\n        this.satCircles = {\r\n            brightness: [100, 0, 100],\r\n            alpha: [0.1875, 0.625, 0.375],\r\n            size: [\r\n                width / 3,\r\n                width / 6,\r\n                width / 12,\r\n            ]\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        const x1 = 0 - (this.width/2),   \r\n            y1 = 0 + (this.width/2), \r\n            x2 = 0,\r\n            y2 = 0 - (this.width/2),\r\n            x3 = 0 + (this.width/2), \r\n            y3 = 0 + (this.width/2),\r\n            x4 = 0 - (this.width/2),   \r\n            y4 = 0 - (this.width/2), \r\n            x5 = 0,\r\n            y5 = 0 + (this.width/2),\r\n            x6 = 0 + (this.width/2), \r\n            y6 = 0 - (this.width/2),\r\n            currentTime = this.p.millis();\r\n        if(currentTime < this.endTime){\r\n            const scale = this.p.min(1, (currentTime - this.startTime) / (this.endTime - this.startTime)),\r\n                dist = window.p5.Vector.sub(this.destination, this.origin).mult(scale),\r\n                pos = window.p5.Vector.add(this.origin, dist);\r\n            this.p.translate(pos.x, pos.y);\r\n            this.p.rotate(this.rotation);\r\n\r\n             // Draw the circles that represent the saturation dimension\r\n            this.p.stroke(0);\r\n            for (let i = 0; i < 3; i++) {\r\n                this.p.fill(0, 0, this.satCircles.brightness[i], this.satCircles.alpha[i]);\r\n                this.p.ellipse(0, 0, this.satCircles.size[i]);\r\n            }\r\n            \r\n            this.p.strokeWeight(4);\r\n            this.p.stroke(this.hue, 100, 100);\r\n            this.p.fill(this.hue, 100, 100, 0.1);\r\n            this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n            this.p.triangle(x4, y4, x5, y5, x6, y6);\r\n\r\n            const oppositeHue = (this.hue + 180) % 360;\r\n            this.p.stroke(this.hue, 0, 100);\r\n            this.p.fill(oppositeHue, 100, 100, 0.5);\r\n            this.p.push();\r\n            this.p.scale(0.75);\r\n            this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n            this.p.triangle(x4, y4, x5, y5, x6, y6);\r\n            this.p.stroke(this.hue, 0, 0);\r\n            this.p.fill(this.hue, 100, 100, 0.5);\r\n            this.p.scale(0.5);\r\n            this.p.triangle(x1, y1, x2, y2, x3, y3);\r\n            this.p.triangle(x4, y4, x5, y5, x6, y6);\r\n            this.p.pop();\r\n\r\n\r\n\r\n            this.p.rotate(-this.rotation);\r\n            this.p.translate(-pos.x, -pos.y);\r\n            this.p.strokeWeight(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * function to draw a hexagon shape\r\n     * adapted from: https://p5js.org/examples/form-regular-polygon.html\r\n     * @param {Number} x  - x-coordinate of the hexagon\r\n     * @param {Number} y  - y-coordinate of the hexagon\r\n     * @param {Number} radius - radius of the hexagon\r\n     */\r\n    octagon(x, y, radius) {\r\n        this.p.angleMode(this.p.RADIANS);\r\n        const angle = this.p.TWO_PI / 8;\r\n        this.p.beginShape();\r\n        for (let a = this.p.TWO_PI/16; a < this.p.TWO_PI + this.p.TWO_PI/16; a += angle) {\r\n            const sx = x + this.p.cos(a) * radius;\r\n            const sy = y + this.p.sin(a) * radius;\r\n            this.p.vertex(sx, sy);\r\n        }\r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.angleMode(this.p.DEGREES);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/glyphs-no-3.7aea6911.ogg\";","export default __webpack_public_path__ + \"static/media/glyphs-no-3.466d9c9c.mid\";","import React, { useRef, useEffect } from \"react\";\r\nimport \"./helpers/Globals\";\r\nimport \"p5/lib/addons/p5.sound\";\r\nimport * as p5 from \"p5\";\r\nimport { Midi } from '@tonejs/midi'\r\nimport PlayIcon from './functions/PlayIcon.js';\r\n\r\nimport CircleGlyph from './classes/CircleGlyph.js';\r\nimport LABCATGlyph from './classes/LABCATGlyph.js';\r\nimport HexagonGlyph from './classes/HexagonGlyph.js';\r\nimport TriangleGlyph from './classes/TriangleGlyph.js';\r\n\r\nimport audio from \"../audio/glyphs-no-3.ogg\";\r\nimport midi from \"../audio/glyphs-no-3.mid\";\r\n\r\n/**\r\n * Glyphs No. 3\r\n */\r\nconst P5SketchWithAudio = () => {\r\n    const sketchRef = useRef();\r\n\r\n    const Sketch = p => {\r\n\r\n        p.canvas = null;\r\n\r\n        p.canvasWidth = window.innerWidth;\r\n\r\n        p.canvasHeight = window.innerHeight;\r\n\r\n        p.audioLoaded = false;\r\n\r\n        p.player = null;\r\n\r\n        p.PPQ = 3840 * 4;\r\n\r\n        p.bpm = 112.444;\r\n\r\n        p.loadMidi = () => {\r\n            Midi.fromUrl(midi).then(\r\n                function(result) {\r\n                    console.log(result);\r\n                    const noteSet1 = result.tracks[8].notes; // Massive - 64ER LEAD\r\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1', true);\r\n                    const noteSet2 = result.tracks[14].notes; // Combinator 1 - Touch Orchestra\r\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2'); \r\n                    const noteSet3 = result.tracks[21].notes; // Wave - Multichord\r\n                    p.scheduleCueSet(noteSet3, 'executeCueSet3'); \r\n                    const noteSet4 = Object.assign({},result.tracks[23].controlChanges); // Wave - Multichord - Filter 6\r\n                    p.scheduleCueSet(noteSet4[Object.keys(noteSet4)[0]], 'executeCueSet4'); \r\n                    const noteSet5 = result.tracks[10].notes; // Combinator 2 - Mysterious Glock\r\n                    p.scheduleCueSet(noteSet5, 'executeCueSet5');\r\n                    p.audioLoaded = true;\r\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\r\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\r\n                }\r\n            );\r\n            \r\n        }\r\n\r\n        p.preload = () => {\r\n            p.song = p.loadSound(audio, p.loadMidi);\r\n            p.song.onended(p.logCredits);\r\n        }\r\n\r\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\r\n            let lastTicks = -1,\r\n                currentCue = 1;\r\n            for (let i = 0; i < noteSet.length; i++) {\r\n                const note = noteSet[i],\r\n                    { ticks, time } = note;\r\n                if(ticks !== lastTicks || poly){\r\n                    note.currentCue = currentCue;\r\n                    p.song.addCue(time, p[callbackName], note);\r\n                    lastTicks = ticks;\r\n                    currentCue++;\r\n                }\r\n            }\r\n        } \r\n\r\n        p.setup = () => {\r\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\r\n            p.background(0);\r\n            p.colorMode(p.HSB);\r\n            p.rectMode(p.CENTER);\r\n            p.angleMode(p.DEGREES);\r\n            p.bgHue = p.random(0, 360);\r\n        }\r\n\r\n        p.animatedGlyphs = [];\r\n\r\n        p.animatedGlyphs2 = [];\r\n\r\n        p.bgHue = 0;\r\n\r\n        p.bgOpacity = 0.9;\r\n\r\n        p.draw = () => {\r\n            if(p.audioLoaded && p.song.isPlaying()){\r\n                p.background(p.bgHue, 100, 50, p.bgOpacity);\r\n                for (let i = 0; i < p.animatedGlyphs.length; i++) {\r\n                    const glyph = p.animatedGlyphs[i];\r\n                    glyph.update();\r\n                    glyph.draw();\r\n                }\r\n\r\n                for (let i = 0; i < p.animatedGlyphs2.length; i++) {\r\n                    const glyph = p.animatedGlyphs2[i];\r\n                    glyph.update();\r\n                    glyph.draw();\r\n                }\r\n            }\r\n        }\r\n\r\n        p.circleGlyphScale = 0;\r\n\r\n        p.circleGlyphDarkMode = 0; \r\n\r\n        p.executeCueSet1 = (note) => {\r\n            const { currentCue, midi }  = note;\r\n            const variation = p.random(-p.width / 24, p.width / 24);\r\n            const x = p.width / 2 + variation;\r\n            const y = p.height / 2  + variation;\r\n            const size = p.random(p.width / 32, p.width / 64);\r\n            const maxSize = p.width / 16;\r\n            const intervalPerNote = 20;\r\n\r\n            if(currentCue % 62 === 1) {\r\n                p.circleGlyphScale++;\r\n            }\r\n\r\n            if(midi < 67) {\r\n                for (let index = 0; index < 8; index++) {\r\n                    setTimeout(() => {\r\n                        p.animatedGlyphs.push(\r\n                            new CircleGlyph(\r\n                                p, \r\n                                x, \r\n                                y, \r\n                                maxSize / p.circleGlyphScale, \r\n                                size / p.circleGlyphScale, \r\n                                p.circleGlyphDarkMode\r\n                            )\r\n                        );\r\n                    }, intervalPerNote * index);\r\n                }\r\n                p.circleGlyphDarkMode = !p.circleGlyphDarkMode;\r\n            }            \r\n        }\r\n\r\n        p.executeCueSet2 = (note) => {\r\n            const { currentCue } = note;\r\n            const size = p.random(p.height / 4, p.width / 4);\r\n            const x = p.width / 2;\r\n            const y = p.height / 2;\r\n\r\n            if(currentCue === 1){\r\n                p.animatedGlyphs = [];\r\n                p.bgHue = p.random(0, 360);\r\n            }\r\n            \r\n            p.animatedGlyphs2.push(\r\n                new TriangleGlyph(p, x, y, size)\r\n            );            \r\n        }\r\n\r\n        p.executeCueSet3 = (note) => {\r\n            const { currentCue, durationTicks } = note;\r\n            const variation = p.random(-p.width / 64, p.width / 64);\r\n            const x = p.width / 2 + variation;\r\n            const y = p.height / 2  + variation;\r\n            const maxSize = p.width / 32;\r\n            const numberOfNotes = durationTicks > 10000 ? 56 : 8;\r\n            // Calculate milliseconds per tick\r\n            const millisecondsPerTick = 60000 / (p.bpm * p.PPQ);\r\n            // Calculate total duration in milliseconds\r\n            const totalDurationMs = millisecondsPerTick * durationTicks;\r\n            // Calculate interval per note\r\n            const intervalPerNote = totalDurationMs / numberOfNotes;\r\n\r\n            if(currentCue >= 18) {\r\n                for (let index = 0; index < numberOfNotes; index++) {\r\n                    setTimeout(() => {\r\n                        p.animatedGlyphs.push(\r\n                            new HexagonGlyph(\r\n                                p, \r\n                                x, \r\n                                y, \r\n                                maxSize,\r\n                                maxSize / 4,\r\n                                durationTicks > 10000\r\n                            )\r\n                        );\r\n                    }, intervalPerNote * index);\r\n                }\r\n            }\r\n        }\r\n\r\n        p.starGlyphOpacity = 0;\r\n\r\n        p.executeCueSet4 = (note) => {\r\n            const { currentCue } = note;\r\n            if(currentCue <= 2048) {\r\n                p.starGlyphOpacity = note.value;\r\n            }\r\n        }\r\n\r\n        p.executeCueSet5 = (note) => {\r\n            const { currentCue } = note;\r\n\r\n            const delay = (60000 / p.bpm) / 4 * 3;\r\n\r\n            setTimeout(() => {\r\n                const variation = p.random(-p.width / 24, p.width / 24);\r\n                let size = p.width / 2;\r\n                let shapeType = p.random(['octagon', 'pentagon']);\r\n                let x = p.random(p.width / 3, p.width - (p.width / 3));\r\n                let y = p.random(p.height / 3, p.height - (p.height / 3));\r\n\r\n                if(currentCue % 6 === 1){\r\n                    p.bgHue = p.random(0, 360);\r\n                    if(currentCue < 18) {\r\n                        p.animatedGlyphs = [];\r\n                    }\r\n                }\r\n\r\n                p.animatedGlyphs2.push(\r\n                    new LABCATGlyph(p, x, y, size, shapeType)\r\n                );\r\n\r\n                if(currentCue > 18) {\r\n                    x = p.width / 2 + variation;\r\n                    y = p.height / 2  + variation;\r\n                    size = p.random(p.width / 8, p.width / 12);\r\n                    const intervalPerNote = 50;\r\n                    for (let index = 0; index < 8; index++) {\r\n                        setTimeout(() => {\r\n                            p.animatedGlyphs2.push(\r\n                                new LABCATGlyph(p, x, y, size, shapeType)\r\n                            );\r\n                        }, intervalPerNote * index);\r\n                    }\r\n                }  \r\n            }, delay);\r\n        };\r\n\r\n        p.hasStarted = false;\r\n\r\n        p.mousePressed = () => {\r\n            if(p.audioLoaded){\r\n                if (p.song.isPlaying()) {\r\n                    p.song.pause();\r\n                } else {\r\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\r\n                        p.reset();\r\n                        if (typeof window.dataLayer !== typeof undefined){\r\n                            window.dataLayer.push(\r\n                                { \r\n                                    'event': 'play-animation',\r\n                                    'animation': {\r\n                                        'title': document.title,\r\n                                        'location': window.location.href,\r\n                                        'action': 'replaying'\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\r\n                    p.canvas.addClass(\"fade-in\");\r\n                    p.song.play();\r\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\r\n                        window.dataLayer.push(\r\n                            { \r\n                                'event': 'play-animation',\r\n                                'animation': {\r\n                                    'title': document.title,\r\n                                    'location': window.location.href,\r\n                                    'action': 'start playing'\r\n                                }\r\n                            }\r\n                        );\r\n                        p.hasStarted = false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        p.creditsLogged = false;\r\n\r\n        p.logCredits = () => {\r\n            if (\r\n                !p.creditsLogged &&\r\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\r\n            ) {\r\n                p.creditsLogged = true;\r\n                    console.log(\r\n                    \"Music By: http://labcat.nz/\",\r\n                    \"\\n\",\r\n                    \"Animation By: https://github.com/LABCAT/\"\r\n                );\r\n                p.song.stop();\r\n            }\r\n        };\r\n\r\n        p.reset = () => {\r\n\r\n        }\r\n\r\n        p.updateCanvasDimensions = () => {\r\n            p.canvasWidth = window.innerWidth;\r\n            p.canvasHeight = window.innerHeight;\r\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\r\n        }\r\n\r\n        if (window.attachEvent) {\r\n            window.attachEvent(\r\n                'onresize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                }\r\n            );\r\n        }\r\n        else if (window.addEventListener) {\r\n            window.addEventListener(\r\n                'resize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                },\r\n                true\r\n            );\r\n        }\r\n        else {\r\n            //The browser does not support Javascript event binding\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        new p5(Sketch, sketchRef.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={sketchRef}>\r\n            <PlayIcon />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default P5SketchWithAudio;\r\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}